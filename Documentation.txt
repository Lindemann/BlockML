/*
    ____  __           __   __  _____ 
   / __ )/ /___  _____/ /__/  |/  / / 
  / __  / / __ \/ ___/ //_/ /|_/ / /  
 / /_/ / / /_/ / /__/ ,< / /  / / /___
/_____/_/\____/\___/_/|_/_/  /_/_____/

*/

title[BlockML Documentation]

toc[Contents]

sec[Introduction][

img[info.svg]

]/* Introduction */

sec[Markup Elements][

sec[Paragraphs, Line Breaks and White Space][

Paragraphs and line breaks work exactly like you would except. To create new paragraphs use 2 LFs (press 2 times Enter). To create line breaks use 1 LF.

code[markdown][This is a paragraph.↵
↵ 
This is a second paragraph.↵
This is a new line.]

Useless whitespace gets removed from the compiler.

code[markdown][↵ 
↵ 
↵ 
↵ 
The BlockML compiler removes useless white space like the LFs above.↵
••••Or this TAB in front of this sentence.]

]/*Paragraphs, Line Breaks and White Space*/

sec[Title][
This element creates a centered, clown sized heading and it sets the c[<title>] of your HTML document.

code[no-highlight][title\[Document Title\]]
html[<h1 style="padding: 0" id="title">Document Title</h1><p></p>]
img[title.png]

]/*Title*/

sec[Document Header][]/*Document Header*/

sec[Sections][
Sections consist of a section heading and section content. 

code[vala][sec\[Heading\]\[Content\]]

These content can be text and every BlockML markup element, regardless that not every element makes sense in that context, for example c[title] and c[toc] elements.

Nest the sections to get a section hierarchy.

code[vala][sec\[Section Heading\]\[

sec\[SubSection Heading\]\[Content\]/* SubSection */

\]/* Section */]

html[<div class="sec" id="sec-1">
	<h1>1 Section Heading</h1>
	<div class="sec" id="sec-1.1">
		<h2>1.1 SubSection Heading</h2>
		<p>Content</p>
	</div>
</div>]

A complex example:

code[vala][sec\[Section Heading\]\[

sec\[SubSection Heading\]\[Content\]/* SubSection */

sec\[SubSection Heading\]\[

sec\[SubSubSection Heading\]\[Some other content\]/* SubSubSection */

\]/*SubSection*/

\]/* Section */

sec\[Section Heading\]\[Content too\]/*Section*/]

html[<div class="sec" id="sec-1">
	<h1>1 Section Heading</h1>
	<div class="sec" id="sec-1.1">
		<h2>1.1 SubSection Heading</h2>
		<p>Content</p>
	</div>
	<div class="sec" id="sec-1.2">
		<h2>1.2 SubSection Heading</h2>
		<div class="sec" id="sec-1.2.1">
			<h3>1.2.1 SubSubSection Heading</h3>
			<p>Some other content</p>
		</div>
	</div>
</div>
<div class="sec" id="sec-2">
	<h1>2 Section Heading</h1>
	<p>Content too</p>
</div>]

]/*Sections*/

sec[Table of Contents][
To get a Table of Contents use the c[toc] element. The Table of Contents gets assembled from the section headings.

code[no-highlight][toc\[TOC Title\]]

The Table of Contents for the section example above looks like this:

html[<div id="toc">
			<h1>TOC Title</h1>
			<ul>
				<li><span><span>1 Section Heading</span></span><a href="#sec-1"><span>\[⚐\]</span></a></li>
				<ul>
					<li><span><span>1.1 SubSection Heading</span></span><a href="#sec-1.1"><span>\[⚐\]</span></a></li>
				</ul>
				<ul>
					<li><span><span>1.2 SubSection Heading</span></span><a href="#sec-1.2"><span>\[⚐\]</span></a></li>
					<ul>
						<li><span><span>1.2.1 SubSubSection Heading</span></span><a href="#sec-1.2.1"><span>\[⚐\]</span></a></li>
					</ul>
				</ul>
			</ul>
			<ul>
				<li><span><span>2 Section Heading</span></span><a href="#sec-2"><span>\[⚐\]</span></a></li>
			</ul>
		</div>]

]/*Table of Contents*/

sec[Links][
A Link consists of an URL or of an URL and a link description.

code[no-highlight][a\[http://awwapps.com\]
a\[http://awwapps.com\]\[Description Text\]]

a[http://awwapps.com]
a[http://awwapps.com][Description Text]

]/*Links*/

sec[Images][
To embed a local image into the document, copy that image into the auto generated c[images]-Folder, which is part of the c[output]-Folder. Then embed the image name without any path references.

img[embedImage.png]
code[no-highlight][img\[localImage.png\]]

img[dribbble.png]

You can also embed images from the internet, when you use their URL.

code[no-highlight][img\[http://internetImage.jpg\]]

If an image doesn't fit into the document, resize its width or its height or both with a second block: c[\[w, h\]]

m[Don't forget the comma!]

code[vala][/*adjust width and height*/
img\[localImage.png\]\[400, 300\]

/*adjust only the width*/
img\[localImage.png\]\[400,\]

/*adjust only the height*/
img\[localImage.png\]\[,300\]]

img[dribbble.png][400,]

]/*Images*/

sec[Headings][

There are headings from c[<h1>] - c[<h6>]. Headings don't get used for the TOC. If you want a fancy TOC use sections.

code[no-highlight][h1\[Heading 1\]
h2\[Heading 2\]
h3\[Heading 3\]
h4\[Heading 4\]
h5\[Heading 5\]
h6\[Heading 6\]]

html[<h1>Heading 1</h1>
<h2>Heading 2</h2>
<h3>Heading 3</h3>
<h4>Heading 4</h4>
<h5>Heading 5</h5>
<h6>Heading 6</h6>]

]/*Headings*/

sec[Code Listings][

Code listings uses the following syntax:

code[no-highlight][code\[Language\]\[Code\]]

BlockML makes use of a[http://highlightjs.org][Highlight.js] to provide syntax highlighting. In order to get proper highlighting you have to specify the programming language. You find a list of all available languages under: a[http://highlightjs.org/static/test.html]. Use c[no-highlight] if you don't want syntax highlighting.

code[no-highlight][code\[java\]\[System.out.println("Hello World!");\]]
code[java][System.out.println("Hello World!");]

m[You have to escape all square brackets in your code.] For more information read id[ESCAPE].

code[no-highlight][code\[objectivec\]\[self.scanner = \\\[Scanner scannerWithString:string\\\];
self.document = \\\[HTMLDocument new\\\];\]]

code[objectivec][self.scanner = \[Scanner scannerWithString:string\];
self.document = \[HTMLDocument new\];]

]/*Code with Syntax Highlighting*/

sec[Math Formulas][

Since BlockML uses a[http://www.mathjax.org][MathJax] for mathematics rendering you can use TeX/LaTeX or MathML syntax. 

Use c[math\[Formula\]] for larger equations that stay separated by themselves. The delimiters for TeX/LaTeX formulas are c[$$...$$] or c[\\\[...\\\]].

code[no-highlight][math\[$$x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}$$\]]

math[$$x = {-b \pm \sqrt{b^2-4ac} \over 2a}$$]

Or use c[im\[Formula\]] for inline mathematics. The TeX/LaTeX inline delimiters are c[$...$] or c[\(...\)].

code[no-highlight][Some inline mathematics: im\[$a \ne 0$\].]

Some inline mathematics: im[$a \ne 0$].

m[You have to escape all square brackets in your code.] For more information read id[ESCAPE].

]/*Math Formulas*/

sec[Tables][

The BlockML tables are very similar to a[http://www.w3schools.com/html/html_tables.asp][HTML tables]. There are the 4 markup elements to build a table:

ul[
- c[table\[\]]: creates a table
- c[tr\[\]]: creates a table row
- c[th\[\]]: creates a table header cell
- c[td\[\]]: creates a table data cell
]

To assemble a table create at first a c[table]-element:
code[no-highlight][table\[
\]]
Then add the rows:
code[no-highlight][table\[
tr\[\]
tr\[\]
\]]

Finally add c[th]-cells and c[td]-cells:

code[no-highlight][table\[
tr\[ th\[Header 1\] th\[Header 2\] \]
tr\[   td\[Data 1\]   td\[Data 2\] \]
\]]

table[
tr[ th[Header 1] th[Header 2] ]
tr[   td[Data 1]   td[Data 2] ]
]

Another simple example:

code[no-highlight][table\[
tr\[ th\[Header 1\] td\[Data 1\] \]
tr\[ th\[Header 2\] td\[Data 2\] \]
\]]

table[
tr[ th[Header 1] td[Data 1] ]
tr[ th[Header 2] td[Data 2] ]
]

Add a second block, to specify the number of rows or columns a c[td]-cell or a c[th]-cell should span. c[\[h:number\]] creates a horizontal span and c[\[v:number\]] creates a vertical span.

In this example c[th\[Header\]\[h:2\]] creates a horizontal span over 2 columns.

code[no-highlight][table\[
tr\[ 	  th\[Header\]\[h:2\] \]
tr\[ td\[Data 1\] td\[Data 2\] \]
\]]

table[
tr[ 	  th[Header][h:2] ]
tr[ td[Data 1] td[Data 2] ]
]

In this example c[th\[Header\]\[v:2\]] creates a vertical span over 2 rows.

code[no-highlight][table\[
tr\[ th\[Header\]\[v:2\] td\[Data 2\] \]
tr\[                 td\[Data 1\] \]
\]]

table[
tr[ th[Header][v:2] td[Data 2] ]
tr[ 				td[Data 1] ]
]

And in this example c[td\[Data 1\]\[h:2\]] creates a horizontal span over 2 columns.

code[no-highlight][table\[
tr\[ th\[Header 1\] th\[Header 2\] \]
tr\[           td\[Data 1\]\[h:2\] \]
\]]

table[
tr[ th[Header 1] th[Header 2] ]
tr[			  td[Data 1][h:2] ]
]

]/*Tables*/

sec[Captions][

You should use captions directly after c[image]-, c[code]-, c[math]- or for example c[table]-elements. To create a caption use:
code[no-highlight][cap\[Type\]\[Description\]]

The first block specifies the type of the caption like: Listing, Fig., Figure, Table, Abbildung...The second block contains the description text to your c[image]-, c[code]-, c[math]- or c[table]-elements.

Captions of the same type get numbered consecutively. Captions of another type have their own consecutive numbering.

code[no-highlight][img\[image01.png\]\[300,\]
cap\[Fig.\]\[An image\]

code\[python\]\[print("Hello, world!")\]
cap\[Listing\]\[A code listing\]

img\[image02.png\]\[300,\]
cap\[Fig.\]\[Another image\]

code\[lisp\]\[(display "Hello, world!")\]
cap\[Listing\]\[Another code listing\]]

img[image01.png][300,]
cap[Fig.][An image]

code[python][print("Hello, world!")]
cap[Listing][A code listing]

img[image02.png][300,]
cap[Fig.][Another image]

code[lisp][(display "Hello, world!")]
cap[Listing][Another code listing]


]/*Captions*/

sec[Lists][

sec[Unordered Lists][

To create unordered lists use the c[ul\[\]]-element and add your list items to it. You can use dashes c[-] in front of items to emphasize the list structure, but you don't have to. The whitespace between dash and item is irrelevant.

You can nest your lists with other unordered or ordered lists. See an example in id[NLISTS].

code[no-highlight][ul\[
- item
- item
- item
\]]

ul[
- item
- item
- item
]

code[no-highlight][ul\[
item
-item
 - item
\]]

ul[
- item
- item
- item
]

]/*Unordered Lists*/

sec[Ordered Lists][

Ordered lists work in the same way like unordered lists.

code[no-highlight][ol\[
- item
- item
- item
\]]

ol[
- item
- item
- item
]

code[no-highlight][ol\[
- item
- item
	ul\[
	- item
	- item
	- item
	\]
\]]
cap[Listing][Nested lists][NLISTS]

ol[
- item
- item
	ul[
	- item
	- item
	- item
	]
]

]/*Ordered Lists*/

]/*Lists*/

sec[Footnotes][

For footnotes use c[fn\[Content\]]. All footnotes get added to the end of the document.

code[no-highlight][Some text with a footnote fn\[Content\].]

html[<p>Some text with a footnote <a id="fn-back-1" href="#fn-1"><sup>\[1\]</sup></a>.</p>
<div id="fn-1" class="en"><a href="#fn-back-1">\[1\]↵</a> Content</div>]


]/*Footnotes*/

sec[Cross References][

Basically, cross references to captions, sections and bibliography items work almost the same. At first, specify an UID with c[id\[UID\]]. An UID is an unique string, which should only used for one reference.

Use the c[id] at this place in your text, where you want to mention the reference.

code[no-highlight][Some text with a reference id\[UNIQUE\].]

Read the following sections, to see how to connect a c[id] with your captions, sections or bibliography items. 

sec[References to Captions][

Add a further block to your caption that contains the UID.

code[no-highlight][cap\[Type\]\[Description\]\[UID\]]

Here is an example with an image-caption. The UID is "IMG01":

code[no-highlight][img\[image01.png\]\[300,\]
cap\[Figure\]\[Image\]\[IMG01\]

Look at id\[IMG01\].]

img[image01.png][300,]
cap[Figure][Image][IMG01]

Look at id[IMG01].

]/*References to Captions*/

sec[References to Sections][

Add a further block to your section that contains the UID.

code[no-highlight][sec\[Section Heading\]\[Content\]\[UID\]]

Here is an example with "SEC" as UID:

code[no-highlight][For more information see id\[SEC\].

sec\[Section Heading\]\[
Content
\]\[SEC\]]

html[<p>For more information see <a href="#sec-example">1 Section Heading</a>.</p>
<div class="sec" id="sec-example">
	<h1>1 Section Heading</h1>
	<p>Content</p>
</div>]

]/*References to Sections*/

sec[References to Bibliography Items][

bibliography items own by default a UID-block.

code[no-highlight][bib\[UID\]\[Publication Details\]]

Here is an example with "BIB01" as UID:

code[no-highlight][...(figure taken from id\[BIB01\])

bib\[BIB01\]\[Author, Title, Date\]]

...(figure taken from id[BIB01])
bib[BIB01][Author, Title, Date]

]/*References to Bibliography Items*/

]/*Cross References*/

sec[Bibliography][

To reference a publication use the following syntax:

code[no-highlight][bib\[UID\]\[Publication Details\]]

The UID is an unique string, which should only used for one bibliography item.

The publication details must become formatted by your self, in a a[http://sites.stat.psu.edu/~surajit/present/bib.htm#bibstyle][bibliography style] of your choice.

If two or more bibliography items follow each other, they get sorted alphabetically by their UID's.

It might be best practice to collect all bibliography items in a separate "References"/"Bibliography" section or place them at the end of the document. The UID should not be longer then 6 characters and should contain a little bit context to the publication.

Some examples:

code[no-highlight][bib\[SKETCH\]\[Ivan Sutherland.  Sketchpad: A Man-Machine Graphical Communication System. MIT, 1963. a\[http://www.cl.cam.ac.uk/techreports/UCAM-CL-TR-574.pdf\]\[PDF\]\]

bib\[DNA\]\[James Watson and Francis Crick. A Structure for Deoxyribose Nucleic Acid. Nature 171, 737-738, 1953. a\[http://www.nature.com/nature/dna50/watsoncrick.pdf\]\[PDF\]\]]

bib[SKETCH][Ivan Sutherland.  Sketchpad: A Man-Machine Graphical Communication System. MIT, 1963. a[http://www.cl.cam.ac.uk/techreports/UCAM-CL-TR-574.pdf][PDF]]

bib[DNA][James Watson and Francis Crick. A Structure for Deoxyribose Nucleic Acid. Nature 171, 737-738, 1953. a[http://www.nature.com/nature/dna50/watsoncrick.pdf][PDF]]

]/*Bibliography*/

sec[Quotes][
There are block quotations with or without a source.

code[no-highlight][q\[Quote\]\[Source\]]

q[Quote][Source]

code[no-highlight][q\[Quote\]]

q[Quote]

]/*Quotes*/

sec[Text Styles][

You can style your text as b[bold], i[italic], u[underlined], m[marked], s[strikethrough], subscript sub[text], superscript sup[text], and as c[inline code].

sec[Bold][

code[no-highlight][My b\[bold\] text.]
My b[bold] text.

]/*Bold*/

sec[Italic][

code[no-highlight][My i\[italic\] text.]
My i[italic] text.

]/*Italic*/

sec[Underlined][

code[no-highlight][My u\[underlined\] text.]
My u[underlined] text.

]/*Underlined*/

sec[Marked][

code[no-highlight][My m\[marked\] text.]
My m[marked] text.

]/*Marked*/

sec[Strikethrough][

code[no-highlight][My s\[strikethrough\] text.]
My s[strikethrough] text.

]/*strikethrough*/

sec[Subscript][

code[no-highlight][My subscript sub\[text\].]
My subscript sub[text].

]/*Subscript*/

sec[Superscript][

code[no-highlight][My superscript sup\[text\].]
My superscript sup[text].

]/*Subscript*/

sec[Inline Code][

code[no-highlight][My c\[inline code\].]
My c[inline code].

]/*Bold*/


]/*Text Styles*/

sec[Embed HTML][

sec[Inline HTML][

Embed a[https://developer.mozilla.org/en-US/docs/HTML/Inline_elements][inline level HTML] with c[ih\[HTML Code\]].

You can use inline HTML in the same way like inline BlockML elements.

Example:

code[no-highlight][text text ih\[<b>text</b>\] text.]

text text ih[<b>text</b>] text.

]/*Inline HTML*/

sec[Block HTML][

Embed  a[https://developer.mozilla.org/en-US/docs/HTML/Block-level_elements][block level HTML] with c[html\[HTML Code\]].

Example:

code[no-highlight][html\[<h1>Text</h1>\]]

html[<h1>Text</h1>]

]/*Block HTML*/

]/*Embed HTML*/

sec[Comments][

code[vala][/* Comment */

/* Comment
over
multiple
lines */

Some text with a comment /* a\[http://awwapps.com\] */ inside.] 
]/*Comments*/

sec[Page Break][]/*Page Break*/

]/*Markup Elements*/

sec[Escape of Special Characters][
Since square brackets c[\[\]] have a very special meaning in BlockML it is necessary to escape them, if you want to use them in a non markup context. For example in code or mathematical formulas. 
code[objectivec][\[self.window orderFront:self\];]

To escape the square brackets just set a backslash c[\\] in front of them.
code[objectivec][\\\[self.window orderFront:self\\\];]

if you need an expression like this c[] for your fancy LaTeX math formula stuff, it gets a little bit messie. Like it is usual in programming the occurrence of a trailing backslash c[\\\\] means, that the first backslash c[\\] gets escaped, because the first backslash loses their meaning as escape symbol and gets a normal character. 

That means you have to use 6786 backslashes c[] to print c[] with 2 backslashes.

But luckily the BlockML App helps you to manage all the backslashes...

img[escape.png]

][ESCAPE]/*Escape of Special Characters*/

sec[Error Warnings][]/*Errors*/

sec[Use Custom CSS][]/*Use Custom CSS*/

sec[Converting HTML into a PDF][]/*Convert your HTML Document into a PDF*/

sec[Setup TextMate][
If you have ever used TextMate, this section isn't for you. Just "install" the tmBundle, the color schemes and activate spell checking.
]/*Setup TextMate*/
